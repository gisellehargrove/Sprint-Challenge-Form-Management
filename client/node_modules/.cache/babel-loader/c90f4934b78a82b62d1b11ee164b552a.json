{"ast":null,"code":"var _jsxFileName = \"/Users/nancyburks/Desktop/Lambda Repos/Sprint-Challenge-Form-Management/client/src/Components/Form.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport * as Yup from 'yup';\nimport { withFormik, Form, Field } from 'formik';\n\nclass FormComponent extends React.Component {\n  render() {\n    return React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 10\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 11\n      },\n      __self: this\n    }, React.createElement(Field, {\n      type: \"text\",\n      name: \"username\",\n      placeholder: \"Username\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, React.createElement(Field, {\n      type: \"password\",\n      name: \"password\",\n      placeholder: \"Password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      type: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, \"Log In\"));\n  }\n\n}\n\nconst FormikLoginForm = withFormik({\n  mapPropsToValues({\n    username,\n    password\n  }) {\n    return {\n      username: username || '',\n      password: password || ''\n    };\n  },\n\n  validationSchema: Yup.object().shape({\n    username: Yup.string().required('Username is Required'),\n    password: Yup.string().min(4, 'Password must be at least 4 characters').required('Password is required')\n  }),\n\n  handleSubmit(values, {\n    resetForm,\n    setStatus\n  }) {\n    axios.post('http://localhost:5000/api/register', values).then(response => {\n      console.log(response);\n      resetForm();\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n})(FormComponent);\nexport default FormikLoginForm;","map":{"version":3,"sources":["/Users/nancyburks/Desktop/Lambda Repos/Sprint-Challenge-Form-Management/client/src/Components/Form.js"],"names":["React","axios","Yup","withFormik","Form","Field","FormComponent","Component","render","FormikLoginForm","mapPropsToValues","username","password","validationSchema","object","shape","string","required","min","handleSubmit","values","resetForm","setStatus","post","then","response","console","log","catch","error"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,KAA3B,QAAwC,QAAxC;;AAEA,MAAMC,aAAN,SAA4BN,KAAK,CAACO,SAAlC,CAA4C;AAE1CC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,IAAI,EAAC,UAAxB;AAAmC,MAAA,WAAW,EAAC,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,UAAZ;AAAuB,MAAA,IAAI,EAAC,UAA5B;AAAuC,MAAA,WAAW,EAAC,UAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJA,EAOA;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPA,CADF;AAWD;;AAdyC;;AAkB5C,MAAMC,eAAe,GAAGN,UAAU,CAAC;AACjCO,EAAAA,gBAAgB,CAAC;AAACC,IAAAA,QAAD;AAAWC,IAAAA;AAAX,GAAD,EAAuB;AACrC,WAAO;AACLD,MAAAA,QAAQ,EAAEA,QAAQ,IAAI,EADjB;AAELC,MAAAA,QAAQ,EAAEA,QAAQ,IAAI;AAFjB,KAAP;AAID,GANgC;;AAOjCC,EAAAA,gBAAgB,EAAEX,GAAG,CAACY,MAAJ,GAAaC,KAAb,CAAmB;AACnCJ,IAAAA,QAAQ,EAAET,GAAG,CAACc,MAAJ,GACPC,QADO,CACE,sBADF,CADyB;AAGnCL,IAAAA,QAAQ,EAAEV,GAAG,CAACc,MAAJ,GACPE,GADO,CACH,CADG,EACA,wCADA,EAEPD,QAFO,CAEE,sBAFF;AAHyB,GAAnB,CAPe;;AAcjCE,EAAAA,YAAY,CAACC,MAAD,EAAS;AAAEC,IAAAA,SAAF;AAAaC,IAAAA;AAAb,GAAT,EAAmC;AAC7CrB,IAAAA,KAAK,CAACsB,IAAN,CAAW,oCAAX,EAAiDH,MAAjD,EACGI,IADH,CACQC,QAAQ,IAAI;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACAJ,MAAAA,SAAS;AACV,KAJH,EAKGO,KALH,CAKSC,KAAK,IAAI;AACdH,MAAAA,OAAO,CAACC,GAAR,CAAYE,KAAZ;AACD,KAPH;AAQD;;AAvBgC,CAAD,CAAV,CAwBrBvB,aAxBqB,CAAxB;AA0BA,eAAeG,eAAf","sourcesContent":["import React from 'react';\nimport axios from 'axios';\nimport * as Yup from 'yup';\nimport { withFormik, Form, Field } from 'formik';\n\nclass FormComponent extends React.Component {\n\n  render() {\n    return (\n      <Form>\n      <div>\n        <Field type=\"text\" name=\"username\" placeholder=\"Username\" />\n      </div>\n      <div>\n        <Field type=\"password\" name=\"password\" placeholder=\"Password\" />\n      </div>\n      <button type=\"submit\">Log In</button>\n    </Form>\n    );\n  }\n}\n\n\nconst FormikLoginForm = withFormik({\n  mapPropsToValues({username, password}) {\n    return {\n      username: username || '',\n      password: password || ''\n    };\n  },\n  validationSchema: Yup.object().shape({\n    username: Yup.string()\n      .required('Username is Required'),\n    password: Yup.string()\n      .min(4, 'Password must be at least 4 characters')\n      .required('Password is required')\n  }),\n  handleSubmit(values, { resetForm, setStatus }) {\n    axios.post('http://localhost:5000/api/register', values)\n      .then(response => {\n        console.log(response);\n        resetForm();\n      })\n      .catch(error => {\n        console.log(error);\n      })\n  }\n})(FormComponent);\n\nexport default FormikLoginForm;\n"]},"metadata":{},"sourceType":"module"}